<link rel="stylesheet" href="{{ 'component-wishlist.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-pagination.css' | asset_url }}" media="print" onload="this.media='all'">
<noscript>{{ 'component-wishlist.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-pagination.css' | asset_url | stylesheet_tag }}</noscript>

{{ 'component-toolbar.css' | asset_url | stylesheet_tag }}
{{ 'component-product-listing.css' | asset_url | stylesheet_tag }}

{%- liquid
    assign padding_top = section.settings.mg_top_desktop | append: 'px'
    assign padding_bottom = section.settings.mg_bottom_desktop | append: 'px'
    assign padding_top_tablet = section.settings.mg_top_tablet | append: 'px'
    assign padding_bottom_tablet = section.settings.mg_bottom_tablet | append: 'px'
    assign padding_top_mobile = section.settings.mg_top_mobile | append: 'px'
    assign padding_bottom_mobile = section.settings.mg_bottom_mobile | append: 'px'
    assign show_breadcrumb = section.settings.show_breadcrumb
    assign breadcrumb_alignment = section.settings.breadcrumb_alignment
    assign breadcrumb_bg = section.settings.breadcrumb_bg
    assign breadcrumb_gradient = section.settings.breadcrumb_gradient
    assign breadcrumb_bg_mb = section.settings.breadcrumb_bg_mb
    assign breadcrumb_gradient_mb = section.settings.breadcrumb_gradient_mb
    assign show_page_title = section.settings.show_page_title
    assign page_title_alignment = section.settings.page_title_alignment
    assign container = section.settings.container
-%}

<div data-section-id="{{ section.id }}" data-section-type="wishlist" id="WishlistSection-{{ section.id }}" data-section="{{ section.id }}">
    <div class="wishlist-container {% if container == '1170' %}container-1170{% elsif container == '1770' %}container-1770{% elsif container == 'fullwidth'%} container-full{% else %}container{% endif %}">
        {%- if show_breadcrumb -%}
            {% render 'breadcrumb', alignment: breadcrumb_alignment %}
        {%- endif -%}
        {%- if show_page_title -%}
            <h1 class="page-header text-{{ page_title_alignment }}">
                {{ page.title | escape }}
            </h1>
        {%- endif -%}
        <div class="halo-page-content halo-wishlist-content">
            <div class="wishlist-table-wrapper">
                <div class="product-listing" data-wishlist-container> 
                    <wishlist-view class="wishlist-items-container">
                        <div class="toolbar">
                            <label class="toolbar-label">
                                {{ 'sections.collection_template.view_as' | t }}
                            </label>
                            <div class="toolbar-item toolbar-viewAs clearfix" data-view-as>
                                <span class="toolbar-icon icon-mode icon-mode-list active" data-col="1" role="button" aria-label="List" tabindex="0"></span>
                                <span class="toolbar-icon icon-mode icon-mode-grid grid-2" data-col="2" role="button" aria-label="Grid 2" tabindex="0"></span>
                                <span class="toolbar-icon icon-mode icon-mode-grid grid-3" data-col="3" role="button" aria-label="Grid 3" tabindex="0"></span>
                                <span class="toolbar-icon icon-mode icon-mode-grid grid-4" data-col="4" role="button" aria-label="Grid 4" tabindex="0"></span>
                                <span class="toolbar-icon icon-mode icon-mode-grid grid-5" data-col="5" role="button" aria-label="Grid 5" tabindex="0"></span>
                            </div>  
                        </div>  
                        <div class="wishlist-items-display" data-wishlist-items-display></div>
                        <div class="wishlist-items-display grid show productList" data-wishlist-items-grid-display></div>
                    </wishlist-view>   
                </div>  
            </div>  
            <div class="wishlist-footer pagination-right" data-wishlist-footer>
                <a class="wishlist-share link link-underline" href="mailto:?subject= {{ page.title | strip_html }}&amp;body=" data-wishlist-share>
                    <div class="mail-icon-container">
                        {% render 'icon-mail' %}
                    </div>
                    <span class="text">
                        {{ 'wishlist.general.share' | t }}            
                    </span>
                </a>
                <ul class="pagination__list list-unstyled" role="list"  id="wishlist-paginate"></ul>
            </div>
        </div>
    </div>
</div>

<template id="product-wishlist-template">
    <div class="wishlist-row" data-wishlist-added="" data-product-id='' data-wishlist-row>
        <div class="wishlist-rowItem wishlist-image text-left">
            <div class="item">
                <a class="item-image" href="" data-wishlist-image-link>
                    <img srcset="" alt="" data-wishlist-image/>
                </a>
            </div>
        </div>
        <div class="wishlist-rowItem wishlist-meta text-left">
            <div class="item">
                <div class="item-info">
                    <a class="item-title link link-underline" href="" data-wishlist-title-link>
                        <span class="text" data-wishlist-title></span>
                    </a>
                </div>
                <a class="item-vendor" href="" data-wishlist-vendor></a>
                <div class="item-description" data-wishlist-description></div>
            </div>
        </div>
        <div class="wishlist-rowItem wishlist-price text-left">
            <div class="item-price">
                <span class="money" data-wishlist-price></span>
            </div>
        </div>
        <div class="wishlist-rowItem wishlist-add text-center">
            <form 
                action="/cart/add" 
                method="post" 
                class="variants" 
                id="" 
                data-id="" 
                enctype="multipart/form-data"
                data-wishlist-add-form
            >   
            </form>
        </div>
        <div class="wishlist-rowItem wishlist-remove text-center">
            <a class="item-remove wishlist-added" href="#" data-wishlist-handle="" data-wishlist="" data-product-id="" data-wishlist-remove-item>
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
                    <path   
                        d="M 38.982422 6.9707031 A 2.0002 2.0002 0 0 0 37.585938 7.5859375 L 24 21.171875 L 10.414062 7.5859375 A 2.0002 2.0002 0 0 0 8.9785156 6.9804688 A 2.0002 2.0002 0 0 0 7.5859375 10.414062 L 21.171875 24 L 7.5859375 37.585938 A 2.0002 2.0002 0 1 0 10.414062 40.414062 L 24 26.828125 L 37.585938 40.414062 A 2.0002 2.0002 0 1 0 40.414062 37.585938 L 26.828125 24 L 40.414062 10.414062 A 2.0002 2.0002 0 0 0 38.982422 6.9707031 z"
                    ></path>
                </svg>
            </a>
        </div>
    </div>
</template>

<script>
    class WishlistView extends HTMLElement {
        constructor() {
            super();
        }

        connectedCallback() {
            this.listViewContainer = this.querySelector('[data-wishlist-items-display]');
            this.gridViewContainer = this.querySelector('[data-wishlist-items-grid-display]');
            this.listPaginationButtons = document.getElementById('wishlist-paginate');
            this.viewCols = [...this.querySelectorAll('[data-col]')];

            this.viewCols.forEach(viewCol => {
                viewCol.addEventListener('click', this.onViewColClick.bind(this));
            })

            window.addEventListener('resize', this.onResize.bind(this));
        }

        getMaxColOnSize() {
            const availableViewCols = this.viewCols.filter(view => {
                return getComputedStyle(view, null).getPropertyValue('display') === 'inline-block';
            }).map(view => Number(view.dataset.col))

            return availableViewCols[availableViewCols.length - 1]
        }

        onResize() {
            const selectedCol = Number(this.querySelector('[data-col].active').dataset.col);
            const maxColNum = this.getMaxColOnSize();

            if (selectedCol > maxColNum) {
                this.viewCols.find(viewCol => Number(viewCol.dataset.col) === maxColNum).click();
            } 
        }

        onViewColClick(e) {
            const viewCol = e.target;
            const col = Number(viewCol.dataset.col); 

            this.switchViewListGrid(col === 1)
            this.setPaginationAndHeadingView(col === 1);
            this.paginationForList(col === 1)
            this.setGridColumns(col)
            this.setActiveViewCol(viewCol)
        }       

        switchViewListGrid(isList) {
            if (isList) {
                this.gridViewContainer.classList.add('productList');
                return 
            }

            this.gridViewContainer.classList.remove('productList');
        }

        setGridColumns(col) {
            this.gridViewContainer.style.setProperty('--grid-columns', col);
        }

        setActiveViewCol(colElement) {
            this.viewCols.forEach(col => col.classList.remove('active'));
            colElement.classList.add('active');
        }

        setPaginationAndHeadingView(isList) {
            if (isList) {
                this.listPaginationButtons.style.display = 'flex';
                return;
            }

            this.listPaginationButtons.style.display = 'none';
        }   

        paginationForList(isList) {
            const items = this.gridViewContainer.querySelectorAll('.product');
            const currentPage = Number(this.listPaginationButtons.dataset.currentPage);

            if (isList && currentPage) {
                items.forEach((item, index) => {
                    if (index >= (currentPage -1 ) * 3 && index < currentPage * 3) {
                        $(item).show();
                    } else {
                        $(item).hide();
                    }
                })
            } 
            else {
                items.forEach((item, index) => {
                    $(item).show();
                })  
            }
        }   
    }

    customElements.define('wishlist-view', WishlistView);
</script>

<style type="text/css" media="screen">
    #WishlistSection-{{ section.id }}{
        padding-top: {{ padding_top }};
        padding-bottom: {{ padding_bottom }};
    }

    #WishlistSection-{{ section.id }} .wishlist-footer .wishlist-share {
        display: flex; 
        align-items: center;
        gap: 15px;
    }

    @media (max-width: 1024px) {
        #WishlistSection-{{ section.id }}{
            padding-top: {{ padding_top_tablet }};
            padding-bottom: {{ padding_bottom_tablet }};
        }

        #WishlistSection-{{ section.id }} .breadcrumb {
            background: {% if breadcrumb_gradient_mb != blank and breadcrumb_gradient_mb != 'rgba(0,0,0,0)' %}{{ breadcrumb_gradient_mb }}{% elsif breadcrumb_bg_mb != blank and breadcrumb_bg_mb != 'rgba(0,0,0,0)' %}{{ breadcrumb_bg_mb }}{% endif %};
        }
    }

    @media (max-width: 550px) {
        #WishlistSection-{{ section.id }}{
            padding-top: {{ padding_top_mobile }};
            padding-bottom: {{ padding_bottom_mobile }};
        }
    }

    @media (min-width: 1025px) {
        #WishlistSection-{{ section.id }} .breadcrumb-container {
            position: relative;
        }
        
        #WishlistSection-{{ section.id }} .breadcrumb::after {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: {% if breadcrumb_gradient != blank and breadcrumb_gradient != 'rgba(0,0,0,0)' %}{{ breadcrumb_gradient }}{% elsif breadcrumb_bg != blank and breadcrumb_bg != 'rgba(0,0,0,0)' %}{{ breadcrumb_bg }}{% endif %};
            z-index: -1;
        }
    }
</style>

{% schema %}
    {
        "name": "t:sections.main_wishlist.name",
        "settings":
        [
            {
                "type": "header",
                "content": "t:sections.main_wishlist.settings.header__1"
            },
            {
                "type": "checkbox",
                "id": "show_breadcrumb",
                "label": "t:sections.general.settings.breadcrumb.label__1",
                "default": false
            },
            {
                "type": "select",
                "id": "breadcrumb_alignment",
                "label": "t:sections.general.settings.breadcrumb.label__2",
                "options": [
                    {
                        "value": "left",
                        "label": "t:sections.general.settings.breadcrumb.options__1"
                    },
                    {
                        "value": "center",
                        "label": "t:sections.general.settings.breadcrumb.options__2"
                    },
                    {
                        "value": "right",
                        "label": "t:sections.general.settings.breadcrumb.options__3"
                    }
                ],
                "default": "left"
            },
            { 
                "type": "color",
                "id": "breadcrumb_bg",
                "label": "t:settings_schema.colors.settings.colors_name.background_color"
            },
            {
                "type": "color_background",
                "id": "breadcrumb_gradient",
                "label": "t:settings_schema.colors.settings.colors_name.background_color_gradient"
            },
            { 
                "type": "color",
                "id": "breadcrumb_bg_mb",
                "label": "t:settings_schema.colors.settings.colors_name.background_color_mobile",
                "default": "#f6f6f6"
            },
            {
                "type": "color_background",
                "id": "breadcrumb_gradient_mb",
                "label": "t:settings_schema.colors.settings.colors_name.background_gradient_mobile"
            },
            {
                "type": "checkbox",
                "id": "show_page_title",
                "label": "t:sections.general.settings.page-title.label__1",
                "default": true
            },
            {
                "type": "select",
                "id": "page_title_alignment",
                "label": "t:sections.general.settings.page-title.label__2",
                "options": [
                    {
                        "value": "left",
                        "label": "t:sections.general.settings.page-title.options__1"
                    },
                    {
                        "value": "center",
                        "label": "t:sections.general.settings.page-title.options__2"
                    },
                    {
                        "value": "right",
                        "label": "t:sections.general.settings.page-title.options__3"
                    }
                ],
                "default": "center"
            },
            {
                "type": "select",
                "id": "container",
                "label": "t:sections.layout.container.option",
                "default": "fullwidth",
                "options": [
                    {
                        "value": "container",
                        "label": "t:sections.layout.container.option1"
                    },
                    {
                        "value": "1170",
                        "label": "t:sections.layout.container.option4"
                    },
                    {
                        "value": "1770",
                        "label": "t:sections.layout.container.option3"
                    },
                    {
                        "value": "fullwidth",
                        "label": "t:sections.layout.container.option2"
                    }
                ]
            },
            {
                "type": "header",
                "content": "t:sections.layout.margin_top"
            },
            {
                "type": "range",
                "id": "mg_top_desktop",
                "label": "t:sections.layout.mg_desktop.label",
                "min": 0,
                "max": 100,
                "step": 5,
                "unit": "t:sections.layout.mg_desktop.unit",
                "default": 50
            },
            {
                "type": "range",
                "id": "mg_top_tablet",
                "label": "t:sections.layout.mg_tablet.label",
                "min": 0,
                "max": 100,
                "step": 5,
                "unit": "t:sections.layout.mg_desktop.unit",
                "default": 50
            },
            {
                "type": "range",
                "id": "mg_top_mobile",
                "label": "t:sections.layout.mg_mobile.label",
                "min": 0,
                "max": 100,
                "step": 5,
                "unit": "t:sections.layout.mg_desktop.unit",
                "default": 50
            },
            {
                "type": "header",
                "content": "t:sections.layout.margin_bottom"
            },
            {
                "type": "range",
                "id": "mg_bottom_desktop",
                "label": "t:sections.layout.mg_desktop.label",
                "min": 0,
                "max": 100,
                "step": 5,
                "unit": "t:sections.layout.mg_desktop.unit",
                "default": 50
            },
            {
                "type": "range",
                "id": "mg_bottom_tablet",
                "label": "t:sections.layout.mg_tablet.label",
                "min": 0,
                "max": 100,
                "step": 5,
                "unit": "t:sections.layout.mg_desktop.unit",
                "default": 50
            },
            {
                "type": "range",
                "id": "mg_bottom_mobile",
                "label": "t:sections.layout.mg_mobile.label",
                "min": 0,
                "max": 100,
                "step": 5,
                "unit": "t:sections.layout.mg_desktop.unit",
                "default": 50
            }
        ]
    }
{% endschema %}